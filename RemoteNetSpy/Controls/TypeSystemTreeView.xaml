<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:RemoteNetSpy.Converters" 
             xmlns:remoteNetSpy="clr-namespace:RemoteNetSpy"
             xmlns:models="clr-namespace:RemoteNetSpy.Models" xmlns:stretchingtree="clr-namespace:RemoteNetSpy.Controls.StretchingTree"
             xmlns:local="clr-namespace:RemoteNetSpy.Controls" x:Class="RemoteNetSpy.Controls.TypeSystemTreeView"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="300"
             >
    <UserControl.Resources>
        <converters:MemberToIconConverter x:Key="memToIconConverter"/>
        <converters:ModuleToIconMultiConverter x:Key="moduleToIconMultiConverter"/>
        <converters:BoolToWatchIconConverter x:Key="moduleToWatchIconConverter"/>
        <converters:BoolToFreezeButtonText x:Key="boolToFreezeButtonText"/>
        <converters:BoolToFreezeIconConverter x:Key="boolToFreezeIcon"/>
        <converters:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converters:BoolToCollapsabilityConverter x:Key="boolToCollapsabilityConverter"/>
        <converters:BoolToForegroundColor x:Key="boolToForegroundColor"/>
        <converters:DumpedTypeToDescription x:Key="dumpedTypeToDescription"/>
        <converters:DifferenceToForegroundColor x:Key="differenceToForegroundColor"/>
        <Style TargetType="{x:Type ToolBar}">
            <!-- Not Dropdown Button -->
            <Setter Property="ToolBarTray.IsLocked" Value="True"/>
            <!-- Not Overflow Button -->
            <Setter Property="ToolBar.OverflowMode" Value="Never"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <ToolBarPanel IsItemsHost="True" Background="{x:Null}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style for ToolBarTrays -->
        <Style TargetType="{x:Type ToolBarTray}">
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
        <!-- Style for Buttons -->
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource darkThemeButtonStyleKey}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
        </Style>
        <!-- Style for Tree View -->
        <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource darkThemeTreeViewStyleKey}">
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--<TextBox x:Name="SearchTextBox" Grid.Row="0" Text="Search stores or products..."/>-->

        <!-- TextBox -->
        <DockPanel Grid.Row="0" x:Name="AssembliesAreaHeader" DockPanel.Dock="Top" Background="#07ffffff">
            <Label DockPanel.Dock="Top" Content="Types"/>
            <ToolBarTray DockPanel.Dock="Top" IsLocked="True" ClipToBounds="True" Height="26">
                <ToolBar ToolBarTray.IsLocked="True">
                    <DockPanel>
                        <Button x:Name="assembliesRefreshButton" Click="AssembliesRefreshButton_OnClick" ToolTip="Refresh assemblies list" Padding="0">
                            <Grid Width="24" Height="24">
                                <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                <TextBlock/>
                                <Image x:Name="modulesRefreshImage" Source="../icons/Modules_Refresh.png" Stretch="None"/>
                            </Grid>
                        </Button>
                        <Button x:Name="injectDllButton" ToolTip="Inject a .dll" Click="injectDllButton_Click" Padding="0">
                            <Grid Width="24" Height="24">
                                <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                <TextBlock/>
                                <Image Source="../icons/AddModule.png" Stretch="None"/>
                            </Grid>
                        </Button>
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="#ff36393C"/>
                        <Button x:Name="countButton" MinHeight="22" Margin="2,0" Click="CountButton_Click">
                            <Grid>
                                <TextBlock/>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Source="../icons/SearchClass.png" Height="16" Margin="2,0,0,0"/>
                                    <TextBlock x:Name="countLabel" Margin="4,0"><Run Text="Count"/></TextBlock>
                                </StackPanel>
                                <remoteNetSpy:Spinner x:Name="spinner1" Visibility="Collapsed" Height="16" HideBackground="True"/>
                            </Grid>
                        </Button>
                    </DockPanel>
                </ToolBar>
            </ToolBarTray>
            <Grid DockPanel.Dock="Top" Margin="0,2,0,0" MinHeight="20">
                <TextBox x:Name="assembliesFilterBox" TextChanged="filterBox_TextChanged"
                  Height="26"
                  VerticalContentAlignment="Center" 
                  Background="#07ffffff"/>
                <Button x:Name="clearAssembliesFilterButton" 
                 DockPanel.Dock="Right" 
                 Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
            </Grid>
        </DockPanel>

        <!-- TreeView -->
        <stretchingtree:StretchingTreeView x:Name="assembliesTreeView" Grid.Row="1" Margin="0,2,0,0" ItemsSource="{Binding Assemblies}" SelectedItemChanged="TreeView_SelectedItemChanged"
                                           Background="{x:Null}"
                                           BorderBrush="{StaticResource ContainerBorder}">
            <stretchingtree:StretchingTreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource darkThemeTreeViewItemStyleKey}">
                    <EventSetter Event="FrameworkElement.RequestBringIntoView" Handler="TreeViewItem_RequestBringIntoView"/>
                </Style>
            </stretchingtree:StretchingTreeView.ItemContainerStyle>
            <stretchingtree:StretchingTreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding FilteredTypes}">
                    <Grid Margin="0" MinWidth="444">
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Copy Module Name" Click="CopyModuleName_Click"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <!-- This TextBlock combined with the wrapper 'Grid' is a hack to allow the right-click Context menu in the entire line-->
                        <TextBlock Margin="0"  />
                        <StackPanel Orientation="Horizontal">
                            <Image Margin="0,0,3,0">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource moduleToIconMultiConverter}">
                                        <Binding Path="Runtime"/>
                                        <Binding Path="Types.Count"/>
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <TextBlock Text="{Binding Name}" Margin="2,0,5,0" />
                        </StackPanel>
                    </Grid>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:DumpedTypeModel}">
                            <Grid>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Copy Type Name" Click="CopyTypeName_Click"/>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <!-- This TextBlock combined with the wrapper 'Grid' is a hack to allow the right-click Context menu in the entire line-->
                                <TextBlock Margin="0"
                                            />
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="../icons/Class.png" Margin="0,0,3,0"/>
                                    <TextBlock Text="{Binding FullTypeName}"  Margin="2,0,5,0"
                                                />
                                    <DockPanel Visibility="{Binding HaveInstances, Converter={StaticResource boolToCollapsabilityConverter}}">
                                        <TextBlock Text="("/>
                                        <TextBlock Text="{Binding NumInstances}"/>
                                        <TextBlock Text=")"/>
                                    </DockPanel>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </stretchingtree:StretchingTreeView.ItemTemplate>
        </stretchingtree:StretchingTreeView>
    </Grid>
</UserControl>
