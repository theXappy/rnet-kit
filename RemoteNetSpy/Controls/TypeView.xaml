<UserControl x:Class="RemoteNetSpy.Controls.TypeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RemoteNetSpy.Controls"
             xmlns:remoteNetSpy="clr-namespace:RemoteNetSpy"
             xmlns:models="clr-namespace:RemoteNetSpy.Models"
             xmlns:controls="clr-namespace:RemoteNetSpy.Controls"
             xmlns:converters="clr-namespace:RemoteNetSpy.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:MemberToIconConverter x:Key="memToIconConverter"/>
        <converters:BoolToWatchIconConverter x:Key="moduleToWatchIconConverter"/>
        <converters:BoolToFreezeButtonText x:Key="boolToFreezeButtonText"/>
        <converters:BoolToFreezeIconConverter x:Key="boolToFreezeIcon"/>
        <converters:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converters:BoolToCollapsabilityConverter x:Key="boolToCollapsabilityConverter"/>
        <converters:BoolToForegroundColor x:Key="boolToForegroundColor"/>
        <converters:IsProcessDeadToBackgroundColor x:Key="isProcessDeadToBackgroundColor"/>
        <converters:DumpedTypeToDescription x:Key="dumpedTypeToDescription"/>
        <converters:DifferenceToForegroundColor x:Key="differenceToForegroundColor"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel Margin="0,0,0,2">
            <DockPanel x:Name="MembersLeftArea" Dock="Top" Background="#07ffffff">
                <Label DockPanel.Dock="Top">Members List</Label>
                <ToolBarTray DockPanel.Dock="Top" Height="26">
                    <ToolBar ToolBarTray.IsLocked="True">
                        <DockPanel>
                            <Button x:Name="traceClassButton" MinHeight="22" Margin="2,0" Click="TraceTypeOptimal_OnClick" Padding="0">
                                <Button.Content>
                                    <Grid Height="24">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.ColumnSpan="2"/>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <Image Source="../icons/TraceClass.png" Height="16" ToolTip="Trace Selected Method"/>
                                            <TextBlock Margin="4,0">Trace Type</TextBlock>
                                        </StackPanel>
                                        <Grid Grid.Column="1">
                                            <Button x:Name="traceTypeExtraButton" Grid.Column="1" FontFamily="Marlett" Content="6" Click="ShowTraceTypeContextMenu">
                                                <Button.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem
                                                               Header="Trace Type (Full)"
                                                               ToolTip="Traces all methods of the type, including ones that might be problematic like Equals, Finalize, ..."
                                                               Click="TraceTypeFull_OnClick" 
                                                               >
                                                            <MenuItem.Icon>
                                                                <Image Source="../icons/TraceClass.png"/>
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </Button.ContextMenu>
                                            </Button>
                                            <TextBlock x:Name="traceTypeExtraButtonHoverHack" Background="#11ffffff" IsHitTestVisible="False"
                                                          Visibility="{Binding IsMouseOver, ElementName=traceTypeExtraButton, Converter={StaticResource boolToCollapsabilityConverter}, FallbackValue=Hidden}"
                                                          />
                                        </Grid>
                                    </Grid>
                                </Button.Content>
                            </Button>
                            <Button x:Name="traceMethodButton" MinHeight="22" Padding="0" DockPanel.Dock="Right" Margin="2,0" Click="traceMethodButton_Click" >
                                <Button.Content>
                                    <Grid Width="24" Height="24">
                                        <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                        <TextBlock/>
                                        <Image Source="../icons/TraceMethod.png" Height="16" ToolTip="Trace Selected Method"/>
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </DockPanel>
                    </ToolBar>
                </ToolBarTray>
                <Grid DockPanel.Dock="Top" Margin="0,2" MinHeight="20">
                    <TextBox x:Name="membersFilterBox" TextChanged="filterBox_TextChanged" Height="26" VerticalContentAlignment="Center" Background="#07ffffff"/>
                    <Button x:Name="clearMembersFilterButton" 
                      DockPanel.Dock="Right" 
                      Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
                </Grid>
            </DockPanel>
            <ListBox x:Name="membersListBox" DockPanel.Dock="Top" PreviewMouseDown="membersListBox_PreviewMouseDown">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:DumpedMember}">
                        <DockPanel>
                            <Image Source="{Binding Path=MemberType, Converter={StaticResource memToIconConverter}}" Margin="0,0,3,0" Height="16" Width="17"/>
                            <TextBlock Text="{Binding Path=NormalizedName}" MouseDown="MemberListItemMouseDown">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Copy Member" DataContext="{Binding Mode=OneWay}"
                                                              Click="MemberMenuItem_OnClick"/>
                                        <MenuItem Header="Add to Playground" DataContext="{Binding Mode=OneWay}"
                                                              Click="MemberMenuItem_AddToPlayground"/>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>

        <DockPanel Grid.Row="1" Margin="0,2,2,2">
            <DockPanel DockPanel.Dock="Top" Background="#07ffffff" Height="28" LastChildFill="False">
                <Label HorizontalAlignment="Left" VerticalAlignment="Top">Instances in memory</Label>
                <Button DockPanel.Dock="Left" Click="FindHeapInstancesButtonClicked" Padding="5,0" Margin="2,2" MinHeight="21" VerticalAlignment="Top">
                    <Grid>
                        <StackPanel x:Name="findHeapInstancesButtonTextPanel" Orientation="Horizontal" VerticalAlignment="Top">
                            <Image Source="../icons/Refresh.png" Height="16"/>
                        </StackPanel>
                        <remoteNetSpy:Spinner x:Name="findHeapInstancesButtonSpinner" Visibility="Collapsed" HideBackground="True"/>
                    </Grid>
                </Button>
            </DockPanel>
            <ListBox x:Name="heapInstancesListBox" Margin="0">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:HeapObject}">
                        <Grid>
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Copy Address" Click="CopyAddressMenuItem_Click"/>
                                    <MenuItem Header="Open in Memory View" Click="ShowMemoryView_Click">
                                        <MenuItem.Icon>
                                            <Image Source="../icons/Memory.png" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Cast to Another Type" Click="PromptForVariableCast">
                                        <MenuItem.Icon>
                                            <Image Source="../icons/Class.png" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <!-- This TextBlock combined with the wrapper 'Grid' is a hack to allow the right-click Context menu in the entire line-->
                            <TextBlock Margin="0"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="1"
                                                   IsEnabled="{Binding Path=Frozen}"
                                                   Padding="8,0"
                                                   Margin="0,0,0,0"
                                                   Click="InspectButtonBaseOnClick">
                                    <Button.Content>
                                        <DockPanel>
                                            <Image DockPanel.Dock="Left" Source="/icons/Search.png" Margin="0,2,3,2" Height="16"/>
                                            <TextBlock Text="Inspect"/>
                                        </DockPanel>
                                    </Button.Content>
                                </Button>
                                <Button Grid.Column="2"
                                        Click="FreezeHeapObjectButtonClicked"
                                        Padding="8,0"
                                        Margin="0,0,4,0"
                                        MinWidth="85"
                                        >
                                    <Button.Content>
                                        <Grid>
                                            <DockPanel>
                                                <Image DockPanel.Dock="Left" Source="{Binding Path=Frozen, Converter={StaticResource boolToFreezeIcon}}" Margin="0,2,3,2" Height="16"/>
                                                <!--<TextBlock Text="Interact in rnet-explore"/>-->
                                                <TextBlock Text="{Binding Path=Frozen, Converter={StaticResource boolToFreezeButtonText}}"/>
                                            </DockPanel>
                                            <Image RenderTransformOrigin="0.5, 0.5" Source="icons/Loading.png" Visibility="Collapsed" Height="16">
                                                <Image.RenderTransform>
                                                    <!-- giving the transform a name tells the framework not to freeze it -->
                                                    <RotateTransform x:Name="noFreeze" />
                                                </Image.RenderTransform>
                                                <Image.Triggers>
                                                    <EventTrigger RoutedEvent="Loaded">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                                        To="-360" Duration="0:0:1" RepeatBehavior="Forever" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Image.Triggers>
                                            </Image>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <TextBlock Text="{Binding Path=Description}"
                                                                    VerticalAlignment="Center"
                                                                    ClipToBounds="True"
                                                                    TextWrapping="NoWrap"
                                                                    TextTrimming="CharacterEllipsis"
                                                                    />
                                <TextBlock Foreground="Aquamarine"
                                                                    Visibility="{Binding Path=Frozen, Converter={StaticResource boolToCollapsabilityConverter}}"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalAlignment="Right"
                                                                    Margin="10,0"> (Frozen)</TextBlock>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
    </Grid>
</UserControl>
