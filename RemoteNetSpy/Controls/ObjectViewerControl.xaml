<UserControl x:Class="RemoteNetSpy.Controls.ObjectViewerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RemoteNetSpy.Controls"
             xmlns:converters="clr-namespace:RemoteNetSpy.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <converters:BoolToCollapsabilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:MemberToIconConverter x:Key="memToIconConverter"/>
        <converters:ComplexObjectVisibilityConverter x:Key="complexObjectVisibilityConverter"/>
        <converters:AddressesVisibilityConverter x:Key="addressesVisibilityConverter"/>
        <converters:StrValueToInvokeButtonVisibilityConverter x:Key="strValueToInvokeButtonVisibilityConverter"/>
        <converters:RawViewToVisibilityConverter x:Key="rawViewToVisibilityConverter"/>
        <converters:RawViewItemToVisibilityConverter x:Key="rawViewItemToVisibilityConverter"/>
        <converters:CollectionEmptyToVisibilityConverter x:Key="collectionEmptyToVisibilityConverter"/>
        <converters:MemberNameToFormattedTextConverter x:Key="memberNameToFormattedTextConverter"/>
        <Style TargetType="ToolBar">
            <!-- Not Dropdown Button -->
            <Setter Property="ToolBarTray.IsLocked" Value="True"/>
            <!-- Not Overflow Button -->
            <Setter Property="OverflowMode" Value="Never"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolBar">
                        <ToolBarPanel IsItemsHost="True" Background="{x:Null}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style for ToolBarTrays -->
        <Style TargetType="ToolBarTray">
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
        <!-- Style for Buttons -->
        <Style TargetType="Button" BasedOn="{StaticResource darkThemeButtonStyleKey}"/>
    </UserControl.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <DockPanel DockPanel.Dock="Top" Margin="0,2">
                <DockPanel DockPanel.Dock="Top" Margin="0,3" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,5,0">Address:</TextBlock>
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center"  x:Name="objAddrTextBox" d:Text="0x0000aabbccdd"/>
                    <Button VerticalAlignment="Center" DockPanel.Dock="Left" Margin="3,0,0,0" Click="copyAddressButton_Click" VerticalContentAlignment="Center" ToolTip="Copy address to clipboard">
                        <Image Source="../icons/Copy.png" Height="16"/>
                    </Button>
                    <Button  VerticalAlignment="Center" DockPanel.Dock="Left" Margin="3,0" Click="memoryViewButton_Click" VerticalContentAlignment="Center">
                        <StackPanel Orientation="Horizontal" Margin="4,0">
                            <Image Source="../icons/Memory.png" Height="16"/>
                            <TextBlock Margin="3,0" VerticalAlignment="Center">Memory View</TextBlock>
                        </StackPanel>
                    </Button>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" Margin="0,3" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,5,0">Type:</TextBlock>
                    <Image DockPanel.Dock="Left" MaxHeight="14" Source="/icons/Class.png" Margin="0,0,3,0" />
                    <TextBlock x:Name="objTypeTextBox" d:Text="Namespace.ClassName"/>
                    <Button  VerticalAlignment="Center" DockPanel.Dock="Left" Margin="3,0" Click="castButtonClicked" VerticalContentAlignment="Center">
                        <StackPanel Orientation="Horizontal" Margin="4,0">
                            <TextBlock Margin="3,0" VerticalAlignment="Center">Cast To...</TextBlock>
                        </StackPanel>
                    </Button>
                </DockPanel>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top" Margin="0,5">
                <TextBlock>Members:</TextBlock>
            </DockPanel>
            <Grid DockPanel.Dock="Top" Margin="0,2" MinHeight="20">
                <TextBox x:Name="membersFilterBox" TextChanged="membersFilterBox_TextChanged" Height="26" VerticalContentAlignment="Center" 
                         Background="#07ffffff" BorderBrush="{StaticResource ControlBrightDefaultBorderBrush}" BorderThickness="1"/>
                <Button x:Name="clearMembersFilterButton" 
                        DockPanel.Dock="Right" 
                        Click="clearMembersFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
            </Grid>
        </DockPanel>
        <Grid>
            <DataGrid x:Name="membersGrid" DockPanel.Dock="Top" Margin="0,5" 
                    CanUserAddRows="False"
                    IsReadOnly="True"
                    RowHeaderWidth="0"
                    AutoGenerateColumns="False"
                    Background="{StaticResource ControlDefaultBackground}"
                    >
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource ControlDarkerBackground}" />
                        <Setter Property="Padding" Value="4,0,0,4" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Name" Width="4*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <!-- Button to expend IEnumerables -->
                                    <DockPanel Width="30" 
                                              Visibility="{Binding Path=Name, Converter={StaticResource rawViewItemToVisibilityConverter}}" 
                                             />
                                    <Button Visibility="{Binding Path=Name, Converter={StaticResource rawViewToVisibilityConverter}}" 
                                          Padding="5,0"
                                          Click="EnumerateRawValueButton_OnClick"
                                          Background="Transparent"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                  >
                                        <Canvas Width="5" Height="5">
                                            <Polygon Points="0,0 4,2.5, 0,5" Stroke="White" Fill="Transparent"
                                                   Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"  />
                                            <Polygon Points="4,4 0,4 4,0" Stroke="White" Fill="White" 
                                                   Visibility="{Binding IsEnabled, Converter={StaticResource InverseBoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"  />
                                        </Canvas>
                                    </Button>
                                    <Image DockPanel.Dock="Left"
                                  Source="{Binding Path=MemberType, Converter={StaticResource memToIconConverter}}" Margin="0,0,3,0" Height="16"/>
                                    <!-- Updated to use the formatted text converter -->
                                    <ContentPresenter DockPanel.Dock="Left">
                                        <ContentPresenter.Content>
                                            <MultiBinding Converter="{StaticResource memberNameToFormattedTextConverter}">
                                                <Binding Path="Name"/>
                                                <Binding Path="MemberType"/>
                                            </MultiBinding>
                                        </ContentPresenter.Content>
                                    </ContentPresenter>
                                </DockPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Value" MinWidth="30" Width="10*" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DockPanel Margin="2,0">
                                    <!-- 'Invoke' button for methods. -->
                                    <Button DockPanel.Dock="Right" Click="InvokeClicked" Visibility="{Binding Converter={StaticResource strValueToInvokeButtonVisibilityConverter}}"
                                          Padding="2,1"
                                          VerticalContentAlignment="Center">
                                        <DockPanel>
                                            <Image Margin="0" Height="14" 
                                                 Source="/icons/Run.png"
                                                 />
                                            <TextBlock Padding="5,1">Invoke</TextBlock>
                                        </DockPanel>
                                    </Button>
                                    <!-- 'Inspect' button for non-primitive objects. -->
                                    <Button DockPanel.Dock="Right" Click="InspectClicked" Visibility="{Binding Path=RawValue, Converter={StaticResource complexObjectVisibilityConverter}}"
                                          Padding="2,1"
                                          VerticalContentAlignment="Center">
                                        <DockPanel>
                                            <Image Margin="0,0,3,0" Height="14" 
                                                 Source="/icons/Search.png"
                                                 />
                                            <TextBlock Padding="5,1">Inspect</TextBlock>
                                        </DockPanel>
                                    </Button>
                                    <!-- 'View Memory' button for ulong objects (assuming they're addresses). -->
                                    <Button DockPanel.Dock="Right" Click="ViewMemoryClicked" Visibility="{Binding Path=RawValue, Converter={StaticResource addressesVisibilityConverter}}"
                                          Padding="2,1"
                                          VerticalContentAlignment="Center">
                                        <DockPanel>
                                            <Image Margin="0,0,3,0" Height="16" Source="/icons/Memory.png"/>
                                            <TextBlock Padding="3,0">Memory View</TextBlock>
                                        </DockPanel>
                                    </Button>
                                    <!-- (X) icon for thrown exceptions when accessing/invoking the member/method -->
                                    <Image DockPanel.Dock="Left" Source="/icons/statusError.png" 
                                             Visibility="{Binding IsThrownException, Converter={StaticResource BoolToVisibilityConverter}}" 
                                             Height="16"
                                             Width="16"/>
                                    <!-- View textblock/textbox. At all times, only one of them is visible.-->
                                    <Grid DockPanel.Dock="Left">
                                        <TextBlock Text="{Binding Path=Value}"  MouseLeftButtonDown="UIElement_OnPreviewMouseRightButtonDown"/>
                                        <TextBox Visibility="Hidden" Text="{Binding Path=Value}" LostFocus="UIElement_OnLostFocus" Background="{StaticResource ControlDefaultBackground}" Foreground="{StaticResource ControlDefaultForeground}"/>
                                    </Grid>
                                </DockPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Type" Binding="{Binding Type}"
                                        Foreground="{StaticResource ControlDefaultForeground}"
                                        MinWidth="50" Width="6*"/>
                </DataGrid.Columns>
            </DataGrid>
            
            <!-- Members Empty Overlay -->
            <Grid Visibility="{Binding ItemsSource, ElementName=membersGrid, Converter={StaticResource collectionEmptyToVisibilityConverter}}"
                  d:Visibility="Hidden">
                <!-- Background overlay - non-interactive -->
                <Border Background="#40404040" 
                        IsHitTestVisible="False"/>
                
                <!-- Interactive content -->
                <StackPanel HorizontalAlignment="Center" 
                           VerticalAlignment="Center"
                           IsHitTestVisible="True">
                    <TextBlock Text="No members found" 
                               HorizontalAlignment="Center"
                               FontSize="14"
                               Foreground="LightGray"
                               FontStyle="Italic"
                               IsHitTestVisible="False"/>
                    
                    <!-- Sister Type Suggestion -->
                    <StackPanel Orientation="Horizontal" 
                               HorizontalAlignment="Center"
                               Margin="0,10,0,0"
                               Visibility="{Binding HasSuggestedSisterType, Converter={StaticResource BoolToVisibilityConverter}}"
                               IsHitTestVisible="True">
                        <TextBlock Text="Would you like to try casting to " 
                                   FontSize="12"
                                   Foreground="LightGray"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"/>
                        <Button Background="Transparent" 
                                BorderThickness="0"
                                Padding="2"
                                Click="SuggestedSisterType_Click"
                                Cursor="Hand"
                                IsHitTestVisible="True">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/icons/Class.png" 
                                       Height="14" 
                                       Margin="0,0,3,0"
                                       VerticalAlignment="Center"/>
                                <TextBlock FontSize="12"
                                           Foreground="Orange"
                                           TextDecorations="Underline"
                                           VerticalAlignment="Center"
                                           d:Text="MyNamespace.MyClassName">
                                    <TextBlock.Text>
                                        <Binding Path="SuggestedSisterType.FullTypeName" 
                                                 FallbackValue="System.Collections.Generic.List&lt;T&gt;"/>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </Button>
                        <TextBlock Text="?" 
                                   FontSize="12"
                                   Foreground="LightGray"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
