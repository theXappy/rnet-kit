<Window x:Class="RemoteNetSpy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:remoteNetSpy="clr-namespace:RemoteNetSpy"
        xmlns:models="clr-namespace:RemoteNetSpy.Models"
        xmlns:controls="clr-namespace:RemoteNetSpy.Controls"
        xmlns:converters="clr-namespace:RemoteNetSpy.Converters" xmlns:hostingwfinwpf="clr-namespace:HostingWfInWPF;assembly=HostingWfInWPF"
        mc:Ignorable="d"
        Title="RemoteNET Spy"
        Height="820" Width="1450"
        WindowStartupLocation="CenterScreen"
        Style="{DynamicResource CustomWindowStyle}"
        Initialized="MainWindow_OnInitialized"
        d:Background="#1e1e1e"
        PreviewKeyDown="MainWindow_OnPreviewKeyDown"
        UseLayoutRounding="True"
        >
    <Window.Resources>
        <converters:MemberToIconConverter x:Key="memToIconConverter"/>
        <converters:ModuleToIconConverter x:Key="moduleToIconConverter"/>
        <converters:BoolToWatchIconConverter x:Key="moduleToWatchIconConverter"/>
        <converters:BoolToFreezeButtonText x:Key="boolToFreezeButtonText"/>
        <converters:BoolToFreezeIconConverter x:Key="boolToFreezeIcon"/>
        <converters:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converters:BoolToCollapsabilityConverter x:Key="boolToCollapsabilityConverter"/>
        <converters:BoolToForegroundColor x:Key="boolToForegroundColor"/>
        <converters:DotnetVersionToForegroundColor x:Key="dotnetVersionToForegroundColor"/>
        <converters:DumpedTypeToDescription x:Key="dumpedTypeToDescription"/>
        <converters:DifferenceToForegroundColor x:Key="differenceToForegroundColor"/>
        <Style TargetType="ToolBar">
            <!-- Not Dropdown Button -->
            <Setter Property="ToolBarTray.IsLocked" Value="True"/>
            <!-- Not Overflow Button -->
            <Setter Property="OverflowMode" Value="Never"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolBar">
                        <ToolBarPanel IsItemsHost="True" Background="{x:Null}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style for ToolBarTrays -->
        <Style TargetType="ToolBarTray">
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
        <!-- Style for Buttons -->
        <Style TargetType="Button" BasedOn="{StaticResource darkThemeButtonStyleKey}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="23"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <DockPanel DockPanel.Dock="Top" Margin="5">
                <TextBlock DockPanel.Dock="Left" Margin="4,0,4,0" VerticalAlignment="Center">Target:</TextBlock>
                <DockPanel>
                    <Button x:Name="procsRefreshButton" DockPanel.Dock="Right" MinWidth="25" Margin="4,0,0,0" Click="ProcsRefreshButton_OnClick" BorderBrush="#FF3C3C3C">
                        <Image Source="icons/Refresh.png" Stretch="None"/>
                    </Button>
                    <Grid>
                        <Border x:Name="procsBoxBorder">
                            <ComboBox x:Name="procsBox" SelectionChanged="procsBox_SelectionChanged" FontFamily="Consolas"
                                  IsTextSearchEnabled="True" TextSearch.TextPath="Name"
                                  Margin="4,0"
                                  >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:InjectableProcess}">
                                        <DockPanel>
                                            <!--<Image Source="/icons/ModulePublic.png" Margin="0,0,3,0"/>-->
                                            <TextBlock Text="{Binding Path=Name}" Margin="0,0,10,0" />
                                            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" >
                                                <TextBlock Text="(" />
                                                <TextBlock Text="{Binding Path=Pid}" />
                                                <TextBlock Text=")" />
                                            </StackPanel>
                                            <TextBlock Text="{Binding Path=DotNetVersion}" Margin="0,0,10,0" Foreground="{Binding Path=DotNetVersion, Converter={StaticResource dotnetVersionToForegroundColor}}"/>
                                            <TextBlock Text="{Binding Path=DiverState}" Foreground="Aquamarine" />
                                        </DockPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property="TextSearch.Text" Value="{Binding Name}" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </Border>
                        <TextBlock x:Name="procsBoxLoadingOverlay"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"
                               d:Visibility="Visible"
                               DockPanel.Dock="Left"
                               Padding="4,0"
                               >
                            <TextBlock.Text>Loading...</TextBlock.Text>
                        </TextBlock>
                        <remoteNetSpy:Spinner x:Name="processConnectionSpinner" Margin="1" Visibility="Collapsed"/>
                    </Grid>
                </DockPanel>
            </DockPanel>
            <ToolBarTray DockPanel.Dock="Top" Background="#22000000" Margin="2,0" Height="30">
                <ToolBar BandIndex="3" Height="28" Margin="1,1">
                    <DockPanel>
                        <Button x:Name="browserButton" Margin="1,1" Padding="0" Click="LaunchBrowserClick"
                                DockPanel.Dock="Left">
                            <Grid Height="26">
                                <TextBlock/>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2,0">
                                    <Image Source="icons/Web.png" Height="16"/>
                                    <TextBlock  Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center">Browse API</TextBlock>
                                </StackPanel>
                            </Grid>
                        </Button>
                        <Button x:Name="memoryViewButton" Margin="1,1" Padding="0" Click="memoryViewButton_Click"
                                DockPanel.Dock="Left">
                            <Grid Height="26">
                                <TextBlock/>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2,0">
                                    <Image Source="icons/Memory.png" Height="16"/>
                                    <TextBlock  Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center">Memory View</TextBlock>
                                </StackPanel>
                            </Grid>
                        </Button>
                    </DockPanel>
                </ToolBar>
            </ToolBarTray>
        </DockPanel>
        <Grid x:Name="CenterAreaGrid" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="0"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="21*"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" 
                          Grid.Row="1"
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Stretch"
                          ShowsPreview="true"
                          Width="5" Background="#00112233" 
            />
            <DockPanel x:Name="AssembliesLeftArea" Grid.Column="0" Grid.Row="1" Margin="5,5,0,5">
                <Grid x:Name="AssembliesValuesArea">
                    <controls:StoreProductTreeView x:Name="storeProductTreeView"/>
                    <remoteNetSpy:Spinner x:Name="assembliesSpinner" Margin="1" Visibility="Collapsed"/>
                </Grid>
            </DockPanel>

            <TabControl Grid.Column="1" Grid.Row="1" Margin="5">
                <!-- Tab Item: Interactive -->
                <!-- Tab Item: Interactive -->
                <!-- Tab Item: Interactive -->
                <TabItem Header="Interactive">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <GridSplitter Grid.Row="0"
                                          HorizontalAlignment="Stretch" 
                                          VerticalAlignment="Bottom"
                                          ShowsPreview="true"
                                          Height="5" Background="#00112233" 
                                          />
                        <GridSplitter Grid.Row="1"
                                          HorizontalAlignment="Stretch" 
                                          VerticalAlignment="Bottom"
                                          ShowsPreview="true"
                                          Height="5" Background="#00112233" 
                                          />
                        
                        <TabControl x:Name="tabControl" Margin="0,0,0,5" SelectedIndex="0" Grid.ColumnSpan="2">
                            <TabControl.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource darkThemeButtonStyleKey}"/>
                            </TabControl.Resources>
                            <TabItem Header="Heap Instances">
                                <DockPanel>
                                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="#07ffffff">
                                        <TextBlock  HorizontalAlignment="Left" Padding="4,2,5,2" VerticalAlignment="Center">Heap instances of</TextBlock>
                                        <TextBlock  Foreground="#976e01" Text="{Binding ClassesModel.SelectedType.FullTypeName, FallbackValue='(?)'}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,5,0"/>
                                        <Button Click="FindHeapInstancesButtonClicked" Padding="5,0" Margin="0,2" MinHeight="21">
                                            <Grid>
                                                <StackPanel x:Name="findHeapInstancesButtonTextPanel" Orientation="Horizontal" VerticalAlignment="Center">
                                                    <Image Source="icons/Refresh.png" Height="16"/>

                                                </StackPanel>
                                                <remoteNetSpy:Spinner x:Name="findHeapInstancesButtonSpinner" Visibility="Collapsed" HideBackground="True"/>
                                            </Grid>
                                        </Button>
                                        <Button Click="ExportHeapInstancesButtonClicked" Padding="5,0" Margin="2,2" MinHeight="21" Visibility="Collapsed">
                                            <Grid>
                                                <StackPanel x:Name="exportHeapInstancesButtonTextPanel" Orientation="Horizontal" VerticalAlignment="Center">
                                                    <Image Source="icons/Save.png" Height="16"/>
                                                    <TextBlock Padding="5,0" Margin="5,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Center">Export CSV</TextBlock>
                                                </StackPanel>
                                                <remoteNetSpy:Spinner x:Name="exportHeapInstancesButtonSpinner" Visibility="Collapsed" HideBackground="True"/>
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                    <ListBox x:Name="heapInstancesListBox" Margin="0">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type models:HeapObject}">
                                                <Grid>
                                                    <Grid.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Copy Address" Click="CopyAddressMenuItem_Click"/>
                                                            <MenuItem Header="Cast to Another Type" Click="CastToAnotherTypeMenuItem_Click"/>
                                                        </ContextMenu>
                                                    </Grid.ContextMenu>
                                                    <!-- This TextBlock combined with the wrapper 'Grid' is a hack to allow the right-click Context menu in the entire line-->
                                                    <TextBlock Margin="0"/>
                                                    <DockPanel Margin="0" LastChildFill="False" MinHeight="16">
                                                        <DockPanel.Children>
                                                            <TextBlock Text="{Binding Path=Description}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                                                            <TextBlock Foreground="Aquamarine"
                                                                       Visibility="{Binding Path=Frozen, Converter={StaticResource boolToCollapsabilityConverter}}"
                                                                       VerticalAlignment="Center"
                                                                       Margin="10,0"> (Frozen)</TextBlock>
                                                            <Button DockPanel.Dock="Right" 
                                                                       Click="FreezeUnfreezeHeapObjectButtonClicked"
                                                                       Padding="8,0"
                                                                       Margin="0,0,4,0"
                                                                       MinWidth="85"
                                                                        >
                                                                <Button.Content>
                                                                    <Grid>
                                                                        <DockPanel>
                                                                            <Image DockPanel.Dock="Left" Source="{Binding Path=Frozen, Converter={StaticResource boolToFreezeIcon}}" Margin="0,2,3,2" Height="16"/>
                                                                            <!--<TextBlock Text="Interact in rnet-explore"/>-->
                                                                            <TextBlock Text="{Binding Path=Frozen, Converter={StaticResource boolToFreezeButtonText}}"/>
                                                                        </DockPanel>
                                                                        <Image RenderTransformOrigin="0.5, 0.5" Source="icons/Loading.png" Visibility="Collapsed" Height="16">
                                                                            <Image.RenderTransform>
                                                                                <!-- giving the transform a name tells the framework not to freeze it -->
                                                                                <RotateTransform x:Name="noFreeze" />
                                                                            </Image.RenderTransform>
                                                                            <Image.Triggers>
                                                                                <EventTrigger RoutedEvent="Loaded">
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation
                                                                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                                        To="-360" Duration="0:0:1" RepeatBehavior="Forever" />
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger>
                                                                            </Image.Triggers>
                                                                        </Image>
                                                                    </Grid>
                                                                </Button.Content>
                                                            </Button>
                                                        </DockPanel.Children>
                                                    </DockPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </DockPanel>
                            </TabItem>
                            <TabItem Header="IInspectable Heap Instances" IsEnabled="{Binding HasIInspectables, FallbackValue=False}">
                                <controls:IInspectableHeapPage/>
                            </TabItem>
                        </TabControl>

                        <DockPanel Grid.Row="1" LastChildFill="True" Margin="0,0,0,5">
                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="#07ffffff">
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Padding="4,2,5,2" Margin="0,2" MinHeight="21">Watch</TextBlock>
                            </StackPanel>
                            <ListBox x:Name="watchedObjectsListBox" Margin="0" DockPanel.Dock="Top">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:HeapObject}">
                                        <Grid>
                                            <Grid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Copy Address" Click="CopyAddressMenuItem_Click"/>
                                                    <MenuItem Header="Cast to Another Type" Click="CastToAnotherTypeMenuItem_Click"/>
                                                </ContextMenu>
                                            </Grid.ContextMenu>
                                            <!-- This TextBlock combined with the wrapper 'Grid' is a hack to allow the right-click Context menu in the entire line-->
                                            <TextBlock Margin="0"/>
                                            <DockPanel Margin="0" LastChildFill="False" MinHeight="16">
                                                <DockPanel.Children>
                                                    <TextBlock Text="{Binding Path=Description}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                                                    <TextBlock Foreground="Aquamarine"
   Visibility="{Binding Path=Frozen, Converter={StaticResource boolToCollapsabilityConverter}}"
   VerticalAlignment="Center"
   Margin="10,0"> (Frozen)</TextBlock>
                                                    <Button DockPanel.Dock="Right"
   IsEnabled="{Binding Path=Frozen}"
   Padding="8,0"
   Margin="0,0,0,0"
   Click="InspectButtonBaseOnClick">
                                                        <Button.Content>
                                                            <DockPanel>
                                                                <Image DockPanel.Dock="Left" Source="/icons/Search.png" Margin="0,2,3,2" Height="16"/>
                                                                <TextBlock Text="Inspect"/>
                                                            </DockPanel>
                                                        </Button.Content>
                                                    </Button>
                                                    <Button DockPanel.Dock="Right" Click="FreezeUnfreezeHeapObjectButtonClicked" Padding="8,0" Margin="0,0,4,0" MinWidth="85">
                                                        <Button.Content>
                                                            <Grid>
                                                                <DockPanel>
                                                                    <Image DockPanel.Dock="Left" Source="{Binding Path=Frozen, Converter={StaticResource boolToFreezeIcon}}" Margin="0,2,3,2" Height="16"/>
                                                                    <!--<TextBlock Text="Interact in rnet-explore"/>-->
                                                                    <TextBlock Text="{Binding Path=Frozen, Converter={StaticResource boolToFreezeButtonText}}"/>
                                                                </DockPanel>
                                                                <Image RenderTransformOrigin="0.5, 0.5" Source="icons/Loading.png" Visibility="Collapsed" Height="16">
                                                                    <Image.RenderTransform>
                                                                        <!-- giving the transform a name tells the framework not to freeze it -->
                                                                        <RotateTransform x:Name="noFreeze" />
                                                                    </Image.RenderTransform>
                                                                    <Image.Triggers>
                                                                        <EventTrigger RoutedEvent="Loaded">
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="-360" Duration="0:0:1" RepeatBehavior="Forever" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </EventTrigger>
                                                                    </Image.Triggers>
                                                                </Image>
                                                            </Grid>
                                                        </Button.Content>
                                                    </Button>
                                                </DockPanel.Children>
                                            </DockPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>


                        <GridSplitter Grid.Column="1" 
                      Grid.Row="1"
                      HorizontalAlignment="Left" 
                      VerticalAlignment="Stretch"
                      ShowsPreview="true"
                      Width="5" Background="#00112233" 
                      />

                        <DockPanel Grid.Row="2" LastChildFill="True">
                            <StackPanel DockPanel.Dock="Top" Background="#07ffffff">
                                <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="4,2,5,2" Margin="0,2" MinHeight="21">Immediate Window</TextBlock>
                            </StackPanel>
                            <Border BorderBrush="#FF3C3C3C" BorderThickness="1" DockPanel.Dock="Right">
                                <Grid>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Immediate Window</TextBlock>
                                    <hostingwfinwpf:ConEnumWpfHost x:Name="interactivePanel"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                    </Grid>
                </TabItem>
                <!-- Tab Item: Tracing -->
                <!-- Tab Item: Tracing -->
                <!-- Tab Item: Tracing -->
                <TabItem Header="Tracing">
                    <Grid Margin="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <DockPanel Grid.Row="0" Margin="0,0,0,2">
                            <DockPanel x:Name="MembersLeftArea" Dock="Top" Background="#07ffffff">
                                <Label DockPanel.Dock="Top">Members List</Label>
                                <ToolBarTray DockPanel.Dock="Top" Height="26">
                                    <ToolBar ToolBarTray.IsLocked="True">
                                        <DockPanel>
                                            <Button x:Name="traceClassButton" MinHeight="22" Margin="2,0" Click="TraceTypeOptimal_OnClick" Padding="0">
                                                <Button.Content>
                                                    <Grid Height="24">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.ColumnSpan="2"/>
                                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                            <Image Source="icons/TraceClass.png" Height="16" ToolTip="Trace Selected Method"/>
                                                            <TextBlock Margin="4,0">Trace Type</TextBlock>
                                                        </StackPanel>
                                                        <Grid Grid.Column="1">
                                                            <Button x:Name="traceTypeExtraButton" Grid.Column="1" FontFamily="Marlett" Content="6" Click="ShowTraceTypeContextMenu">
                                                                <Button.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem
                                                           Header="Trace Type (Full)"
                                                           ToolTip="Traces all methods of the type, including ones that might be problematic like Equals, Finalize, ..."
                                                           Click="TraceTypeFull_OnClick" 
                                                           >
                                                                            <MenuItem.Icon>
                                                                                <Image Source="icons/TraceClass.png"/>
                                                                            </MenuItem.Icon>
                                                                        </MenuItem>
                                                                    </ContextMenu>
                                                                </Button.ContextMenu>
                                                            </Button>
                                                            <TextBlock x:Name="traceTypeExtraButtonHoverHack" Background="#11ffffff" IsHitTestVisible="False"
                                                      Visibility="{Binding IsMouseOver, ElementName=traceTypeExtraButton, Converter={StaticResource boolToCollapsabilityConverter}, FallbackValue=Hidden}"
                                                      />
                                                        </Grid>
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            <Button x:Name="traceMethodButton" MinHeight="22" Padding="0" DockPanel.Dock="Right" Margin="2,0" Click="traceMethodButton_Click" >
                                                <Button.Content>
                                                    <Grid Width="24" Height="24">
                                                        <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                                        <TextBlock/>
                                                        <Image Source="icons/TraceMethod.png" Height="16" ToolTip="Trace Selected Method"/>
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                        </DockPanel>
                                    </ToolBar>
                                </ToolBarTray>
                                <Grid DockPanel.Dock="Top" Margin="0,2" MinHeight="20">
                                    <TextBox x:Name="membersFilterBox" TextChanged="filterBox_TextChanged" Height="26" VerticalContentAlignment="Center" Background="#07ffffff"/>
                                    <Button x:Name="clearMembersFilterButton" 
                  DockPanel.Dock="Right" 
                  Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
                                </Grid>
                            </DockPanel>
                            <ListBox x:Name="membersListBox" DockPanel.Dock="Top">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:DumpedMember}">
                                        <DockPanel>
                                            <Image Source="{Binding Path=MemberType, Converter={StaticResource memToIconConverter}}" Margin="0,0,3,0" Height="16" Width="17"/>
                                            <TextBlock Text="{Binding Path=NormalizedName}" MouseDown="MemberListItemMouseDown">
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Copy Member" DataContext="{Binding Mode=OneWay}"
                                        Click="MemberMenuItem_OnClick"/>
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>

                        <TabControl Grid.Row="1" SelectedIndex="0" MinHeight="280">
                            <TabControl.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource darkThemeButtonStyleKey}"/>
                            </TabControl.Resources>
                            <TabItem x:Name="tracingTabItem" Header="Tracing">
                                <DockPanel>
                                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                        <Button Click="RunTracesButtonClicked" Padding="5,0" Margin="0,2" MinHeight="21">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Image Source="icons/Run.png" Height="16"/>
                                                <TextBlock Padding="0,0" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">Start Trace</TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <Button Click="RunFridaTracesButtonClicked" Padding="5,0" Margin="0,2" MinHeight="21">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Image Source="icons/Run.png" Height="16"/>
                                                <TextBlock Padding="0,0" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">Trace with Frida</TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="OpenTraceListClicked">
                                            <Image Source="icons/OpenFolder.png" Height="16"/>
                                        </Button>
                                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="SaveTraceFunctionsListClicked">
                                            <Image Source="icons/Save.png" Height="16"/>
                                        </Button>
                                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="ClearTraceListButtonClicked">
                                            <Image Source="icons/ClearWindowContent.png" Height="16"/>
                                        </Button>
                                        <Button Padding="5,0" Margin="2,2" Click="ManualTraceClicked" Visibility="Collapsed">Manual Trace</Button>
                                    </StackPanel>
                                    <ListBox x:Name="tracesListBox" DisplayMemberPath="DemangledName">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <DockPanel>
                                                    <DockPanel.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Delete" Click="TraceLineDelete_OnClick"/>
                                                        </ContextMenu>
                                                    </DockPanel.ContextMenu>
                                                    <Image Source="/icons/NewMethod.png" Margin="0,0,3,0"/>
                                                    <TextBlock Text="{Binding Path=DemangledName}" />
                                                </DockPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </DockPanel>
                            </TabItem>
                        </TabControl>

                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
        <DockPanel Background="#424242" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"/>
    </Grid>
</Window>
