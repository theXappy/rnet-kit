<Window x:Class="RemoteNetSpy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:remoteNetSpy="clr-namespace:RemoteNetSpy"
        mc:Ignorable="d"
        Title="RemoteNET Spy"
        Height="820" Width="1450"
        WindowStartupLocation="CenterScreen"
        Style="{DynamicResource CustomWindowStyle}"
        Initialized="MainWindow_OnInitialized"
        d:Background="#1e1e1e"
        PreviewKeyDown="MainWindow_OnPreviewKeyDown"
        UseLayoutRounding="True"
        >
    <Window.Resources>
        <remoteNetSpy:MemberToIconConverter x:Key="memToIconConverter"/>
        <remoteNetSpy:ModuleToIconConverter x:Key="moduleToIconConverter"/>
        <remoteNetSpy:BoolToWatchIconConverter x:Key="moduleToWatchIconConverter"/>
        <remoteNetSpy:BoolToFreezeButtonText x:Key="boolToFreezeButtonText"/>
        <remoteNetSpy:BoolToFreezeIconConverter x:Key="boolToFreezeIcon"/>
        <remoteNetSpy:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
        <remoteNetSpy:BoolToVisabilityConverter x:Key="boolToVisabilityConverter"/>
        <remoteNetSpy:BoolToForegroundColor x:Key="boolToForegroundColor"/>
        <remoteNetSpy:DotnetVersionToForegroundColor x:Key="dotnetVersionToForegroundColor"/>
        <remoteNetSpy:DumpedTypeToDescription x:Key="dumpedTypeToDescription"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="23"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="8*"/>
            <ColumnDefinition Width="9*"/>
        </Grid.ColumnDefinitions>
        <GridSplitter Grid.Column="1" 
                      Grid.Row="1"
                      HorizontalAlignment="Left" 
                      VerticalAlignment="Stretch"
                      ShowsPreview="true"
                      Width="5" Background="#00112233" 
                      />
        <GridSplitter Grid.Column="2" 
                      Grid.Row="1"
                      HorizontalAlignment="Left" 
                      VerticalAlignment="Stretch"
                      ShowsPreview="true"
                      Width="5" Background="#00112233" 
        />
        <GridSplitter Grid.ColumnSpan="3" 
                      Grid.Row="1"
                      HorizontalAlignment="Stretch" 
                      VerticalAlignment="Bottom"
                      ShowsPreview="true"
                      Height="5" Background="#00112233" 
        />
        <DockPanel Grid.ColumnSpan="4" >
            <DockPanel DockPanel.Dock="Top" Margin="5">
                <TextBlock DockPanel.Dock="Left" Margin="4,0,4,0" VerticalAlignment="Center">Target:</TextBlock>
                <DockPanel>
                    <Button x:Name="procsRefreshButton" DockPanel.Dock="Right" MinWidth="25" Margin="4,0,0,0" Click="ProcsRefreshButton_OnClick">
                        <Image Source="icons/Refresh.png" Stretch="None"/>
                    </Button>
                    <Grid>
                        <Border x:Name="procsBoxBorder">
                            <ComboBox x:Name="procsBox" SelectionChanged="procsBox_SelectionChanged" FontFamily="Consolas"
                                  IsTextSearchEnabled="True" TextSearch.TextPath="Name"
                                  Margin="4,0"
                                  >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type remoteNetSpy:InjectableProcess}">
                                        <DockPanel>
                                            <!--<Image Source="/icons/ModulePublic.png" Margin="0,0,3,0"/>-->
                                            <TextBlock Text="{Binding Path=Name}" Margin="0,0,10,0" />
                                            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" >
                                                <TextBlock Text="(" />
                                                <TextBlock Text="{Binding Path=Pid}" />
                                                <TextBlock Text=")" />
                                            </StackPanel>
                                            <TextBlock Text="{Binding Path=DotNetVersion}" Margin="0,0,10,0" Foreground="{Binding Path=DotNetVersion, Converter={StaticResource dotnetVersionToForegroundColor}}"/>
                                            <TextBlock Text="{Binding Path=DiverState}" Foreground="Aquamarine" />
                                        </DockPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property="TextSearch.Text" Value="{Binding Name}" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </Border>
                        <TextBlock x:Name="procsBoxLoadingOverlay"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"
                               d:Visibility="Visible"
                               DockPanel.Dock="Left"
                               Padding="4,0"
                               >
                            <TextBlock.Text>Loading...</TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </DockPanel>
            </DockPanel>
            <ToolBarTray DockPanel.Dock="Top">
                <ToolBar >
                    <DockPanel>
                        <Button x:Name="assembliesRefreshButton" MinWidth="25" Margin="1,0"  Click="AssembliesRefreshButton_OnClick" 
                        ToolTip="Refresh assemblies list">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="modulesRefreshImage" Source="icons/Modules_Refresh.png" Stretch="None"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="injectDllButton" MinWidth="25" Margin="1,0"
                                ToolTip="Inject a .dll" Click="injectDllButton_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="icons/AddModule.png" Stretch="None"/>
                            </StackPanel>
                        </Button>
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="#FF434343" />
                        <Button x:Name="watchAllocationToolbarButton" MinWidth="25" Margin="1,0"  
                                ToolTip="Monitor allocations in the selected module" Click="watchAllocationToolbarButton_Clicked">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="icons/Watch.png" Stretch="None"/>
                            </StackPanel>
                        </Button>
                    </DockPanel>
                </ToolBar>
                <ToolBar>
                    <DockPanel>
                        <Button x:Name="countButton" MinHeight="22" Padding="10,0" DockPanel.Dock="Right" Margin="2,0" Click="CountButton_Click">
                            <Button.Content>
                                <Grid>
                                    <TextBlock x:Name="countLabel">Count Instances</TextBlock>
                                    <remoteNetSpy:Spinner x:Name="spinner1" Visibility="Collapsed" Height="16" HideBackground="True"/>
                                </Grid>
                            </Button.Content>
                        </Button>
                    </DockPanel>
                </ToolBar>
            </ToolBarTray>

        </DockPanel>
        <DockPanel Grid.Column="0"  Grid.Row="1" Margin="5,5,0,5">
            <DockPanel Dock="Top">

                <Label DockPanel.Dock="Left">Assemblies</Label>
            </DockPanel>
            <DockPanel>
                <Grid DockPanel.Dock="Top" Margin="0,0,0,2" MinHeight="20">
                    <TextBox x:Name="assembliesFilterBox" TextChanged="filterBox_TextChanged"/>
                    <Button x:Name="clearAssembliesFilterButton" 
                            DockPanel.Dock="Right" 
                            Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
                </Grid>
                <Grid>
                    <ListBox DockPanel.Dock="Top" x:Name="assembliesListBox" SelectionChanged="assembliesListBox_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <Image Source="{Binding Path=., Converter={StaticResource moduleToIconConverter}}" Margin="0,0,3,0"/>
                                    <TextBlock Text="{Binding Path=Name}" 
                                               Foreground="{Binding Path=AnyTypes, Converter={StaticResource boolToForegroundColor}}" 
                                    >
                                        <TextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Monitor allocations in this module" 
                                                          Click="ModuleWatchMenuItem_OnClick" DataContext="{Binding Mode=OneWay}"
                                                          Icon="icons/Watch.png"/>
                                            </ContextMenu>
                                        </TextBlock.ContextMenu>
                                    </TextBlock>
                                    <!-- Optional 'Watch' icon, for allocation-monitored modules -->
                                    <Image Source="{Binding Path=IsMonitoringAllocation, Converter={StaticResource moduleToWatchIconConverter}}" Margin="5,0,3,0"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <remoteNetSpy:Spinner x:Name="assembliesSpinner" Margin="1" Visibility="Collapsed"/>
                </Grid>
            </DockPanel>
        </DockPanel>
        <DockPanel Grid.Column="1"  Grid.Row="1" Margin="5,5,0,5">
            <DockPanel DockPanel.Dock="Top">

                <Label DockPanel.Dock="Left">Types</Label>
            </DockPanel>
            <DockPanel x:Name="typesContentPanel">
                <Grid DockPanel.Dock="Top" Margin="0,0,0,2" MinHeight="20">
                    <TextBox x:Name="typesFilterBox" TextChanged="filterBox_TextChanged"/>
                    <DockPanel>
                        <Button x:Name="clearTypesFilterButton" 
                            DockPanel.Dock="Right" 
                            Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
                        <Button x:Name="typesMatchCaseButton" DockPanel.Dock="Right" Width="24" HorizontalAlignment="Right"
                                      ToolTip="Match Case"
                                      Background="{x:Null}"
                                      BorderBrush="{x:Null}"
                                      Click="TypesMatchCaseButton_OnClick"
                                      >
                            <Button.Content>Aa</Button.Content>
                        </Button>
                    </DockPanel>
                </Grid>
                <ListBox DockPanel.Dock="Top" x:Name="typesListBox" SelectionChanged="typesListBox_SelectionChanged" 
                             VirtualizingStackPanel.VirtualizationMode="Recycling"
                             ScrollViewer.CanContentScroll="True" 
                             VirtualizingStackPanel.IsVirtualizing="True"
                             >
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type remoteNetSpy:DumpedType}">
                            <DockPanel>
                                <Image Source="/icons/Class.png" Margin="0,0,3,0"/>
                                <TextBlock Text="{Binding Path=., Converter={StaticResource dumpedTypeToDescription}}" 
                                           Foreground="{Binding HaveInstances, Converter={StaticResource boolToForegroundColor}}" 
                                           FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                >
                                    <TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Copy Type Name" 
                                                      Click="TypeMenuItem_OnClick" DataContext="{Binding Mode=OneWay}"/>
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                </TextBlock>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </DockPanel>
        <DockPanel Grid.Column="2" Grid.Row="1"  Margin="5,5,5,5">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Label>Members</Label>
            </StackPanel>
            <Grid DockPanel.Dock="Top" Margin="0,0,0,2" MinHeight="20">
                <TextBox x:Name="membersFilterBox" TextChanged="filterBox_TextChanged"/>
                <Button x:Name="clearMembersFilterButton" 
                            DockPanel.Dock="Right" 
                            Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
            </Grid>
            <ListBox x:Name="membersListBox" DockPanel.Dock="Top">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type remoteNetSpy:DumpedMember}">
                        <DockPanel>
                            <Image Source="{Binding Path=NormalizedName, Converter={StaticResource memToIconConverter}}" Margin="0,0,3,0" Height="16" Width="17"/>
                            <TextBlock Text="{Binding Path=NormalizedName}" MouseDown="MemberListItemMouseDown">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Copy Member" DataContext="{Binding Mode=OneWay}"
                                                  Click="MemberMenuItem_OnClick"/>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
        <TabControl x:Name="tabControl" Grid.ColumnSpan="3" Grid.Row="2"  Margin="5"
                    SelectedIndex="0">
            <TabItem Header="Heap Instances">
                <DockPanel >
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <Button Click="FindHeapInstancesButtonClicked" Padding="5,0" Margin="0,2" MinHeight="21">
                            <Grid>
                                <StackPanel x:Name="findHeapInstancesButtonTextPanel" Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Source="icons/StatusBarSearch1.png" Height="16"/>
                                    <TextBlock Padding="5,0" Margin="5,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Center">Search</TextBlock>
                                    <TextBlock Text="{Binding ElementName=typesListBox, Path=SelectedItem.(remoteNetSpy:DumpedType.FullTypeName), FallbackValue='(?)'}"
                                           Foreground="#976e01"
                                           />
                                </StackPanel>
                                <remoteNetSpy:Spinner x:Name="findHeapInstancesButtonSpinner" Visibility="Collapsed" HideBackground="True"/>
                            </Grid>
                        </Button>
                        <Button Click="ExportHeapInstancesButtonClicked" Padding="5,0" Margin="2,2" MinHeight="21">
                            <Grid>
                                <StackPanel x:Name="exportHeapInstancesButtonTextPanel" Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Source="icons/Save.png" Height="16"/>
                                    <TextBlock Padding="5,0" Margin="5,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Center">Export CSV</TextBlock>
                                </StackPanel>
                                <remoteNetSpy:Spinner x:Name="exportHeapInstancesButtonSpinner" Visibility="Collapsed" HideBackground="True"/>
                            </Grid>
                        </Button>
                    </StackPanel>
                    <ListBox x:Name="heapInstancesListBox" DockPanel.Dock="Top">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type remoteNetSpy:HeapObject}">
                                <DockPanel Margin="0" LastChildFill="False" MinHeight="16">
                                    <TextBlock Text="{Binding Path=.}" DockPanel.Dock="Left"
                                               VerticalAlignment="Center"/>
                                    <TextBlock Foreground="Aquamarine"
                                               Visibility="{Binding Path=Frozen, Converter={StaticResource boolToVisabilityConverter}}"
                                               VerticalAlignment="Center"
                                               Margin="10,0"
                                               > (Frozen)</TextBlock>
                                    <Button DockPanel.Dock="Right"
                                            IsEnabled="{Binding Path=Frozen}"
                                            Padding="8,0"
                                            Margin="0,0,4,0"
                                            Click="ExploreButtonBaseOnClick"
                                    >
                                        <Button.Content>
                                            <DockPanel>
                                                <Image DockPanel.Dock="Left" Source="/icons/InteractiveMode.png" Margin="0,2,3,2" Height="16"/>
                                                <TextBlock Text="Explore"/>
                                            </DockPanel>
                                        </Button.Content>
                                    </Button>
                                    <Button DockPanel.Dock="Right"
                                            IsEnabled="{Binding Path=Frozen}"
                                            Padding="8,0"
                                            Margin="0,0,4,0"
                                            Click="InspectButtonBaseOnClick"
                                            >
                                        <Button.Content>
                                            <DockPanel>
                                                <Image DockPanel.Dock="Left" Source="/icons/Search.png" Margin="0,2,3,2" Height="16"/>
                                                <TextBlock Text="Inspect"/>
                                            </DockPanel>
                                        </Button.Content>
                                    </Button>
                                    <Button DockPanel.Dock="Right" 
                                            Click="FreezeUnfreezeHeapObject"
                                            Padding="8,0"
                                            Margin="0,0,4,0"
                                            MinWidth="85"
                                            >
                                        <Button.Content>
                                            <Grid>
                                                <DockPanel>
                                                    <Image DockPanel.Dock="Left" Source="{Binding Path=Frozen, Converter={StaticResource boolToFreezeIcon}}" Margin="0,2,3,2" Height="16"/>
                                                    <!--<TextBlock Text="Interact in rnet-explore"/>-->
                                                    <TextBlock Text="{Binding Path=Frozen, Converter={StaticResource boolToFreezeButtonText}}"/>
                                                </DockPanel>
                                                <Image RenderTransformOrigin="0.5, 0.5" Source="icons/Loading.png" Visibility="Collapsed" Height="16">
                                                    <Image.RenderTransform>
                                                        <!-- giving the transform a name tells the framework not to freeze it -->
                                                        <RotateTransform x:Name="noFreeze" />
                                                    </Image.RenderTransform>
                                                    <Image.Triggers>
                                                        <EventTrigger RoutedEvent="Loaded">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                                        To="-360" Duration="0:0:1" RepeatBehavior="Forever" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Image.Triggers>
                                                </Image>
                                            </Grid>
                                        </Button.Content>
                                    </Button>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="tracingTabItem" Header="Tracing">
                <DockPanel >
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <Button Click="RunTracesButtonClicked" Padding="5,0" Margin="0,2" MinHeight="21">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Image Source="icons/Run.png" Height="16"/>
                                <TextBlock Padding="0,0" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">Start Trace</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="OpenTraceListClicked">
                            <Image Source="icons/OpenFolder.png" Height="16"/>
                        </Button>
                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="SaveTraceListClicked">
                            <Image Source="icons/Save.png" Height="16"/>
                        </Button>
                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="ClearTraceListButtonClicked">
                            <Image Source="icons/ClearWindowContent.png" Height="16"/>
                        </Button>
                        <Button Padding="5,0" Margin="2,2" Click="ManualTraceClicked" Visibility="Collapsed">Manual Trace</Button>
                    </StackPanel>
                    <ListBox x:Name="tracesListBox">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <DockPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Delete" Click="TraceLineDelete_OnClick"/>
                                        </ContextMenu>
                                    </DockPanel.ContextMenu>
                                    <Image Source="/icons/NewMethod.png" Margin="0,0,3,0"/>
                                    <TextBlock Text="{Binding Path=.}" />
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </TabItem>
        </TabControl>
        <DockPanel Background="#424242" Grid.Row="3" Grid.ColumnSpan="4"/>
    </Grid>
</Window>
