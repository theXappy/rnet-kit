<Window x:Class="RemoteNetSpy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:remoteNetSpy="clr-namespace:RemoteNetSpy"
        xmlns:controls="clr-namespace:RemoteNetSpy.Controls"
        mc:Ignorable="d"
        Title="RemoteNET Spy"
        Height="820" Width="1450"
        WindowStartupLocation="CenterScreen"
        Style="{DynamicResource CustomWindowStyle}"
        Initialized="MainWindow_OnInitialized"
        d:Background="#1e1e1e"
        PreviewKeyDown="MainWindow_OnPreviewKeyDown"
        UseLayoutRounding="True"
        >
    <Window.Resources>
        <remoteNetSpy:MemberToIconConverter x:Key="memToIconConverter"/>
        <remoteNetSpy:ModuleToIconConverter x:Key="moduleToIconConverter"/>
        <remoteNetSpy:BoolToWatchIconConverter x:Key="moduleToWatchIconConverter"/>
        <remoteNetSpy:BoolToFreezeButtonText x:Key="boolToFreezeButtonText"/>
        <remoteNetSpy:BoolToFreezeIconConverter x:Key="boolToFreezeIcon"/>
        <remoteNetSpy:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
        <remoteNetSpy:BoolToVisabilityConverter x:Key="boolToVisabilityConverter"/>
        <remoteNetSpy:BoolToForegroundColor x:Key="boolToForegroundColor"/>
        <remoteNetSpy:DotnetVersionToForegroundColor x:Key="dotnetVersionToForegroundColor"/>
        <remoteNetSpy:DumpedTypeToDescription x:Key="dumpedTypeToDescription"/>
        <Style TargetType="ToolBar">
            <!-- Not Dropdown Button -->
            <Setter Property="ToolBarTray.IsLocked" Value="True"/>
            <!-- Not Overflow Button -->
            <Setter Property="OverflowMode" Value="Never"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolBar">
                        <ToolBarPanel IsItemsHost="True" Background="{x:Null}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style for ToolBarTrays -->
        <Style TargetType="ToolBarTray">
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
        <!-- Style for Buttons -->
        <Style TargetType="Button" BasedOn="{StaticResource darkThemeButtonStyleKey}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="23"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="8*"/>
            <ColumnDefinition Width="9*"/>
        </Grid.ColumnDefinitions>
        <GridSplitter Grid.Column="1" 
                      Grid.Row="1"
                      HorizontalAlignment="Left" 
                      VerticalAlignment="Stretch"
                      ShowsPreview="true"
                      Width="5" Background="#00112233" 
                      />
        <GridSplitter Grid.Column="2" 
                      Grid.Row="1"
                      HorizontalAlignment="Left" 
                      VerticalAlignment="Stretch"
                      ShowsPreview="true"
                      Width="5" Background="#00112233" 
        />
        <GridSplitter Grid.Column="0" Grid.ColumnSpan="3" 
                      Grid.Row="1"
                      HorizontalAlignment="Stretch" 
                      VerticalAlignment="Bottom"
                      ShowsPreview="true"
                      Height="5" Background="#00112233" 
        />
        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <DockPanel DockPanel.Dock="Top" Margin="5">
                <TextBlock DockPanel.Dock="Left" Margin="4,0,4,0" VerticalAlignment="Center">Target:</TextBlock>
                <DockPanel>
                    <Button x:Name="procsRefreshButton" DockPanel.Dock="Right" MinWidth="25" Margin="4,0,0,0" Click="ProcsRefreshButton_OnClick" BorderBrush="#FF3C3C3C">
                        <Image Source="icons/Refresh.png" Stretch="None"/>
                    </Button>
                    <Grid>
                        <Border x:Name="procsBoxBorder">
                            <ComboBox x:Name="procsBox" SelectionChanged="procsBox_SelectionChanged" FontFamily="Consolas"
                                  IsTextSearchEnabled="True" TextSearch.TextPath="Name"
                                  Margin="4,0"
                                  >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type remoteNetSpy:InjectableProcess}">
                                        <DockPanel>
                                            <!--<Image Source="/icons/ModulePublic.png" Margin="0,0,3,0"/>-->
                                            <TextBlock Text="{Binding Path=Name}" Margin="0,0,10,0" />
                                            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" >
                                                <TextBlock Text="(" />
                                                <TextBlock Text="{Binding Path=Pid}" />
                                                <TextBlock Text=")" />
                                            </StackPanel>
                                            <TextBlock Text="{Binding Path=DotNetVersion}" Margin="0,0,10,0" Foreground="{Binding Path=DotNetVersion, Converter={StaticResource dotnetVersionToForegroundColor}}"/>
                                            <TextBlock Text="{Binding Path=DiverState}" Foreground="Aquamarine" />
                                        </DockPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property="TextSearch.Text" Value="{Binding Name}" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </Border>
                        <TextBlock x:Name="procsBoxLoadingOverlay"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"
                               d:Visibility="Visible"
                               DockPanel.Dock="Left"
                               Padding="4,0"
                               >
                            <TextBlock.Text>Loading...</TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </DockPanel>
            </DockPanel>
            <ToolBarTray DockPanel.Dock="Top" Background="#22000000" Margin="2,0" Height="30">
                <ToolBar BandIndex="3" Height="28" Margin="1,1">
                    <DockPanel>
                        <Button x:Name="browserButton" Margin="1,1" Padding="0" Click="LaunchBrowserClick"
                                DockPanel.Dock="Left">
                            <Grid Height="26">
                                <TextBlock/>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2,0">
                                    <Image Source="icons/Web.png" Height="16"/>
                                    <TextBlock  Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center">Browse API</TextBlock>
                                </StackPanel>
                            </Grid>
                        </Button>
                        <Button x:Name="memoryViewButton" Margin="1,1" Padding="0" Click="memoryViewButton_Click"
                                DockPanel.Dock="Left">
                            <Grid Height="26">
                                <TextBlock/>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2,0">
                                    <Image Source="icons/Memory.png" Height="16"/>
                                    <TextBlock  Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center">Memory View</TextBlock>
                                </StackPanel>
                            </Grid>
                        </Button>
                    </DockPanel>
                </ToolBar>
            </ToolBarTray>
        </DockPanel>
        <Grid x:Name="CenterAreaGrid" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="0"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="9*"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" 
                          Grid.Row="1"
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Stretch"
                          ShowsPreview="true"
                          Width="5" Background="#00112233" 
            />
            <GridSplitter Grid.Column="2" 
                          Grid.Row="1"
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Stretch"
                          ShowsPreview="true"
                          Width="5" Background="#00112233" 
            />
            <DockPanel x:Name="AssembliesLeftArea" Grid.Column="0" Grid.Row="1" Margin="5,5,0,5">
                <DockPanel x:Name="AssembliesAreaHeader" Dock="Top" Background="#07ffffff">
                    <Label DockPanel.Dock="Top">Assemblies</Label>
                    <ToolBarTray DockPanel.Dock="Top" IsLocked="True" ClipToBounds="True" Height="26">
                        <ToolBar ToolBarTray.IsLocked="True">
                            <DockPanel>
                                <Button x:Name="assembliesRefreshButton" Click="AssembliesRefreshButton_OnClick" 
                            ToolTip="Refresh assemblies list" Padding="0">
                                    <Grid Width="24" Height="24">
                                        <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                        <TextBlock/>
                                        <Image x:Name="modulesRefreshImage" Source="icons/Modules_Refresh.png" Stretch="None"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="injectDllButton"
                            ToolTip="Inject a .dll" Click="injectDllButton_Click" Padding="0">
                                    <Grid Width="24" Height="24">
                                        <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                        <TextBlock/>
                                        <Image Source="icons/AddModule.png" Stretch="None"/>
                                    </Grid>
                                </Button>
                                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="#FF292929" />
                                <Button x:Name="watchAllocationToolbarButton"
                                ToolTip="Monitor allocations in the selected module" Click="watchAllocationToolbarButton_Clicked" Padding="0">
                                    <Grid Width="24" Height="24">
                                        <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                        <TextBlock/>
                                        <Image Source="icons/Watch.png" Stretch="None"/>
                                    </Grid>
                                </Button>
                            </DockPanel>
                        </ToolBar>
                    </ToolBarTray>
                    <Grid DockPanel.Dock="Top" Margin="0,2" MinHeight="20">
                        <TextBox x:Name="assembliesFilterBox" TextChanged="filterBox_TextChanged"
                                 Height="26"
                                 VerticalContentAlignment="Center" 
                                 Background="#07ffffff"/>
                        <Button x:Name="clearAssembliesFilterButton" 
                                DockPanel.Dock="Right" 
                                Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">
                            <Button.Content>X</Button.Content>
                        </Button>
                    </Grid>
                </DockPanel>
                <Grid x:Name="AssembliesValuesArea">
                    <ListBox DockPanel.Dock="Top" x:Name="assembliesListBox" SelectionChanged="assembliesListBox_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate  DataType="{x:Type remoteNetSpy:AssemblyModel}">
                                <DockPanel>
                                    <Image Source="{Binding Path=., Converter={StaticResource moduleToIconConverter}}" Margin="0,0,3,0"/>
                                    <TextBlock Text="{Binding Path=Name}" 
                                           Foreground="{Binding Path=AnyTypes, Converter={StaticResource boolToForegroundColor}}" 
                                >
                                        <TextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Copy Assembly Name" Click="AssemblyMenuItem_OnClick"/>
                                            </ContextMenu>
                                        </TextBlock.ContextMenu>
                                    </TextBlock>
                                    <!-- Optional 'Watch' icon, for allocation-monitored modules -->
                                    <Image Source="{Binding Path=IsMonitoringAllocation, Converter={StaticResource moduleToWatchIconConverter}}" Margin="5,0,3,0"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <remoteNetSpy:Spinner x:Name="assembliesSpinner" Margin="1" Visibility="Collapsed"/>
                </Grid>
            </DockPanel>
            <DockPanel x:Name="TypesCenterArea" Grid.Column="1"  Grid.Row="1" Margin="5,5,0,5">
                <DockPanel x:Name="TypesAreaHeader" Dock="Top" Background="#07ffffff">
                    <Label DockPanel.Dock="Top">Types</Label>
                    <ToolBarTray DockPanel.Dock="Top"  Height="26">
                        <ToolBar ToolBarTray.IsLocked="True">
                            <DockPanel>
                                <Button x:Name="countButton" MinHeight="22" Margin="2,0" Click="CountButton_Click">
                                    <Button.Content>
                                        <Grid>
                                            <TextBlock/>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Image Source="icons/SearchClass.png" Height="16" Margin="2,0,0,0"/>
                                                <TextBlock x:Name="countLabel" Margin="4,0">Count Instances</TextBlock>
                                            </StackPanel>
                                            <remoteNetSpy:Spinner x:Name="spinner1" Visibility="Collapsed" Height="16" HideBackground="True"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="#FF292929" />
                                <DockPanel>
                                    <Button x:Name="traceClassButton" MinHeight="22" DockPanel.Dock="Left" Margin="2,0" Click="TraceTypeOptimal_OnClick" Padding="0">
                                        <Button.Content>
                                            <Grid Height="24">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                                <TextBlock Grid.ColumnSpan="2"/>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                    <Image Source="icons/TraceClass.png" Height="16" ToolTip="Trace Selected Method"/>
                                                    <TextBlock Margin="4,0">Trace Type (Optimal)</TextBlock>
                                                </StackPanel>
                                                <Grid Grid.Column="1">
                                                    <Button x:Name="traceTypeExtraButton" Grid.Column="1" FontFamily="Marlett" Content="6" Click="ShowTraceTypeContextMenu">
                                                        <Button.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem
                                                                    Header="Trace Type (Full)"
                                                                    ToolTip="Traces all methods of the type, including ones that might be problematic like Equals, Finalize, ..."
                                                                    Click="TraceTypeFull_OnClick" 
                                                                    >
                                                                    <MenuItem.Icon>
                                                                        <Image Source="icons/TraceClass.png"/>
                                                                    </MenuItem.Icon>
                                                                </MenuItem>
                                                            </ContextMenu>
                                                        </Button.ContextMenu>
                                                    </Button>
                                                    <TextBlock x:Name="traceTypeExtraButtonHoverHack" Background="#11ffffff" IsHitTestVisible="False"
                                                               Visibility="{Binding IsMouseOver, ElementName=traceTypeExtraButton, Converter={StaticResource boolToVisabilityConverter}, FallbackValue=Hidden}"
                                                               />
                                                </Grid>
                                            </Grid>
                                        </Button.Content>
                                    </Button>

                                </DockPanel>
                            </DockPanel>
                        </ToolBar>
                    </ToolBarTray>
                    <Grid DockPanel.Dock="Top" Margin="0,2" MinHeight="20">
                        <TextBox x:Name="typesFilterBox" TextChanged="filterBox_TextChanged" Height="26" VerticalContentAlignment="Center" Background="#07ffffff"/>
                        <!-- Border + TextBlock tick for a modifable border over the textbox. -->
                        <!-- Otherwise, setting BorderBrush on the TextBox itself only changes it's out-of-focus color, and not in-focus/hover -->
                        <Border x:Name="typesFilterBoxBorder" BorderBrush="{x:Null}" BorderThickness="1">
                            <TextBlock IsHitTestVisible="False"/>
                        </Border>
                        <DockPanel>
                            <Button x:Name="clearTypesFilterButton" 
                            DockPanel.Dock="Right" 
                            Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
                            <Button x:Name="typesWithInstancesFilterButton" DockPanel.Dock="Right" Width="24" HorizontalAlignment="Right"
                                        ToolTip="Only types found in heap"
                                        Background="{x:Null}"
                                        BorderBrush="{x:Null}"
                                        Click="typesWithInstancesFilterButton_OnClick"
                                    >
                                <Button.Content>(#)</Button.Content>
                            </Button>
                            <Button x:Name="typesRegexButton" DockPanel.Dock="Right" Width="24" HorizontalAlignment="Right"
                                ToolTip="Regex"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                Click="TypesRegexButton_OnClick"
                        >
                                <Button.Content>.*</Button.Content>
                            </Button>
                            <Button x:Name="typesMatchCaseButton" DockPanel.Dock="Right" Width="24" HorizontalAlignment="Right"
                                      ToolTip="Match Case"
                                      Background="{x:Null}"
                                      BorderBrush="{x:Null}"
                                      Click="TypesMatchCaseButton_OnClick"
                                      >
                                <Button.Content>Aa</Button.Content>
                            </Button>
                        </DockPanel>
                    </Grid>
                </DockPanel>
                <Grid x:Name="TypesValuesArea">
                    <ListBox x:Name="typesListBox" SelectionChanged="typesListBox_SelectionChanged" 
                             VirtualizingStackPanel.VirtualizationMode="Recycling"
                             ScrollViewer.CanContentScroll="True" 
                             VirtualizingStackPanel.IsVirtualizing="True"
                             >
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type remoteNetSpy:DumpedType}">
                                <DockPanel>
                                    <Image Source="/icons/Class.png" Margin="0,0,3,0"/>
                                    <TextBlock Text="{Binding Path=., Converter={StaticResource dumpedTypeToDescription}}" 
                                           Foreground="{Binding HaveInstances, Converter={StaticResource boolToForegroundColor}}" 
                                           FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                >
                                        <TextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Copy Type Name" Click="TypeMenuItem_OnClick"/>
                                                <MenuItem Header="Go To Assembly" Click="GoToAssemblyMenuItem_OnClick"/>
                                            </ContextMenu>
                                        </TextBlock.ContextMenu>
                                    </TextBlock>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </DockPanel>
            <DockPanel Grid.Column="2" Grid.Row="1"  Margin="5,5,5,5">
                <DockPanel x:Name="MembersLeftArea" Dock="Top" Background="#07ffffff">
                    <Label DockPanel.Dock="Top">Members</Label>
                    <ToolBarTray DockPanel.Dock="Top" Height="26">
                        <ToolBar ToolBarTray.IsLocked="True">
                            <DockPanel>
                                <Button x:Name="traceMethodButton" MinHeight="22" Padding="0" DockPanel.Dock="Right" Margin="2,0" Click="traceMethodButton_Click" >
                                    <Button.Content>
                                        <Grid Width="24" Height="24">
                                            <!-- TextBlock is used to extend "hover" region of the button to the area arond the icon -->
                                            <TextBlock/>
                                            <Image Source="icons/TraceMethod.png" Height="16" ToolTip="Trace Selected Method"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </ToolBar>
                    </ToolBarTray>
                    <Grid DockPanel.Dock="Top" Margin="0,2" MinHeight="20">
                        <TextBox x:Name="membersFilterBox" TextChanged="filterBox_TextChanged" Height="26" VerticalContentAlignment="Center" Background="#07ffffff"/>
                        <Button x:Name="clearMembersFilterButton" 
                            DockPanel.Dock="Right" 
                            Click="clearTypesFilterButton_OnClick" Width="24" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}">X</Button>
                    </Grid>
                </DockPanel>
                <ListBox x:Name="membersListBox" DockPanel.Dock="Top">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type remoteNetSpy:DumpedMember}">
                            <DockPanel>
                                <Image Source="{Binding Path=MemberType, Converter={StaticResource memToIconConverter}}" Margin="0,0,3,0" Height="16" Width="17"/>
                                <TextBlock Text="{Binding Path=NormalizedName}" MouseDown="MemberListItemMouseDown">
                                    <TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Copy Member" DataContext="{Binding Mode=OneWay}"
                                                  Click="MemberMenuItem_OnClick"/>
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                </TextBlock>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </Grid>
        <TabControl x:Name="tabControl" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" Margin="5"
                    SelectedIndex="0">
            <TabControl.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource darkThemeButtonStyleKey}"/>
            </TabControl.Resources>
            <TabItem Header="Heap Instances">
                <DockPanel >
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <Button Click="FindHeapInstancesButtonClicked" Padding="5,0" Margin="0,2" MinHeight="21">
                            <Grid>
                                <StackPanel x:Name="findHeapInstancesButtonTextPanel" Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Source="icons/StatusBarSearch1.png" Height="16"/>
                                    <TextBlock Padding="5,0" Margin="5,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Center">Search</TextBlock>
                                    <TextBlock Text="{Binding ElementName=typesListBox, Path=SelectedItem.(remoteNetSpy:DumpedType.FullTypeName), FallbackValue='(?)'}"
                                           Foreground="#976e01"
                                           />
                                </StackPanel>
                                <remoteNetSpy:Spinner x:Name="findHeapInstancesButtonSpinner" Visibility="Collapsed" HideBackground="True"/>
                            </Grid>
                        </Button>
                        <Button Click="ExportHeapInstancesButtonClicked" Padding="5,0" Margin="2,2" MinHeight="21">
                            <Grid>
                                <StackPanel x:Name="exportHeapInstancesButtonTextPanel" Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Source="icons/Save.png" Height="16"/>
                                    <TextBlock Padding="5,0" Margin="5,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Center">Export CSV</TextBlock>
                                </StackPanel>
                                <remoteNetSpy:Spinner x:Name="exportHeapInstancesButtonSpinner" Visibility="Collapsed" HideBackground="True"/>
                            </Grid>
                        </Button>
                    </StackPanel>
                    <ListBox x:Name="heapInstancesListBox" DockPanel.Dock="Top">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type remoteNetSpy:HeapObject}">
                                <DockPanel Margin="0" LastChildFill="False" MinHeight="16">
                                    <DockPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Copy Address" Click="CopyAddressMenuItem_Click"/>
                                        </ContextMenu>
                                    </DockPanel.ContextMenu>
                                    <DockPanel.Children>
                                        <TextBlock Text="{Binding Path=.}" DockPanel.Dock="Left"
                                               VerticalAlignment="Center"/>
                                        <TextBlock Foreground="Aquamarine"
                                               Visibility="{Binding Path=Frozen, Converter={StaticResource boolToVisabilityConverter}}"
                                               VerticalAlignment="Center"
                                               Margin="10,0"
                                               > (Frozen)</TextBlock>
                                        <Button DockPanel.Dock="Right"
                                            IsEnabled="{Binding Path=Frozen}"
                                            Padding="8,0"
                                            Margin="0,0,4,0"
                                            Click="ExploreButtonBaseOnClick">
                                            <Button.Content>
                                                <DockPanel>
                                                    <Image DockPanel.Dock="Left" Source="/icons/InteractiveMode.png" Margin="0,2,3,2" Height="16"/>
                                                    <TextBlock Text="Explore"/>
                                                </DockPanel>
                                            </Button.Content>
                                        </Button>
                                        <Button DockPanel.Dock="Right"
                                            IsEnabled="{Binding Path=Frozen}"
                                            Padding="8,0"
                                            Margin="0,0,4,0"
                                            Click="InspectButtonBaseOnClick"
                                            >
                                            <Button.Content>
                                                <DockPanel>
                                                    <Image DockPanel.Dock="Left" Source="/icons/Search.png" Margin="0,2,3,2" Height="16"/>
                                                    <TextBlock Text="Inspect"/>
                                                </DockPanel>
                                            </Button.Content>
                                        </Button>
                                        <Button DockPanel.Dock="Right" 
                                            Click="FreezeUnfreezeHeapObject"
                                            Padding="8,0"
                                            Margin="0,0,4,0"
                                            MinWidth="85"
                                            >
                                            <Button.Content>
                                                <Grid>
                                                    <DockPanel>
                                                        <Image DockPanel.Dock="Left" Source="{Binding Path=Frozen, Converter={StaticResource boolToFreezeIcon}}" Margin="0,2,3,2" Height="16"/>
                                                        <!--<TextBlock Text="Interact in rnet-explore"/>-->
                                                        <TextBlock Text="{Binding Path=Frozen, Converter={StaticResource boolToFreezeButtonText}}"/>
                                                    </DockPanel>
                                                    <Image RenderTransformOrigin="0.5, 0.5" Source="icons/Loading.png" Visibility="Collapsed" Height="16">
                                                        <Image.RenderTransform>
                                                            <!-- giving the transform a name tells the framework not to freeze it -->
                                                            <RotateTransform x:Name="noFreeze" />
                                                        </Image.RenderTransform>
                                                        <Image.Triggers>
                                                            <EventTrigger RoutedEvent="Loaded">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation
                                                                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                                        To="-360" Duration="0:0:1" RepeatBehavior="Forever" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Image.Triggers>
                                                    </Image>
                                                </Grid>
                                            </Button.Content>
                                        </Button>
                                    </DockPanel.Children>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="tracingTabItem" Header="Tracing">
                <DockPanel >
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <Button Click="RunTracesButtonClicked" Padding="5,0" Margin="0,2" MinHeight="21">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Image Source="icons/Run.png" Height="16"/>
                                <TextBlock Padding="0,0" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">Start Trace</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="OpenTraceListClicked">
                            <Image Source="icons/OpenFolder.png" Height="16"/>
                        </Button>
                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="SaveTraceFunctionsListClicked">
                            <Image Source="icons/Save.png" Height="16"/>
                        </Button>
                        <Button Padding="2,0" Margin="2,2" MinHeight="21" Click="ClearTraceListButtonClicked">
                            <Image Source="icons/ClearWindowContent.png" Height="16"/>
                        </Button>
                        <Button Padding="5,0" Margin="2,2" Click="ManualTraceClicked" Visibility="Collapsed">Manual Trace</Button>
                    </StackPanel>
                    <ListBox x:Name="tracesListBox">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <DockPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Delete" Click="TraceLineDelete_OnClick"/>
                                        </ContextMenu>
                                    </DockPanel.ContextMenu>
                                    <Image Source="/icons/NewMethod.png" Margin="0,0,3,0"/>
                                    <TextBlock Text="{Binding Path=.}" />
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </TabItem>
            <TabItem Header="IInspectable Heap Instances" IsEnabled="{Binding HasIInspectables, FallbackValue=False}">
                <controls:IInspectableHeapPage/>
            </TabItem>
        </TabControl>
        <DockPanel Background="#424242" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"/>
    </Grid>
</Window>
